<!-- parallax-banner -->
{%-liquid
  assign text_color = section.settings.title_color
  assign height_section = section.settings.height_section
  assign height_section_mobile = section.settings.height_section_mobile
  assign position_text = section.settings.position_text
  assign opacity_bgbox = section.settings.opacity_bgbox

  case position_text
    when 'top-left'
    assign positiontxt = 'align-items-start justify-content-start'
    when 'top-center'
    assign positiontxt = 'align-items-start justify-content-center text-center'
    when 'top-right'
    assign positiontxt = 'align-items-start justify-content-end text-right'
    when 'mid-left'
    assign positiontxt = 'align-items-center justify-content-start'
    when 'mid-center'
    assign positiontxt = 'align-items-center justify-content-center text-center'
    when 'mid-right'
    assign positiontxt = 'align-items-center justify-content-end text-right'
    when 'bot-left'
    assign positiontxt = 'align-items-end justify-content-start'
    when 'bot-center'
    assign positiontxt = 'align-items-end justify-content-center text-center'
    when 'bot-right'
    assign positiontxt = 'align-items-end justify-content-end text-right'
    else 
    assign positiontxt = 'align-items-end justify-content-start'
  endcase
-%}
<style>
  .parallax-banner__wraper--{{ section.id }} {
    --st-parallax-height : {%- if height_section == 'full-screen' -%} 100vh {%- else -%}{{ height_section }}px {%- endif -%};
    --st-bgvideo-height-mb : {%- if height_section_mobile == 'full-screen' -%} 100vh {%- else -%}{{ height_section_mobile }}px {%- endif -%};
    min-height : var(--st-parallax-height);
    padding-top:4rem;
    padding-bottom:4rem;
  }
  @media( max-width:749px){
    .parallax-banner__wraper--{{ section.id }} {
      min-height :  var(--st-bgvideo-height-mb);
    }
  }
  {% if opacity_bgbox > 0 %}
  .parallax-banner__wraper--{{ section.id }} .parallax-banner__meta{
    padding:40px;
  }
{% endif %}
  .parallax-banner__wraper--{{ section.id }} .parallax-banner__meta::before{
    background-color: {{ section.settings.bg_box }} ;
    opacity: {{ opacity_bgbox }};
  }
  .parallax-banner__wraper--{{ section.id }}::before{
    content:"";
        position: absolute;
        color: white;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1;
        background: {%- if section.settings.gradient_bg != blank -%} {{ section.settings.gradient_bg }} {%- else -%}  {{ section.settings.bg_overlay }}{%- endif -%};
      opacity: {{ section.settings.opacity_bg_overlay }};
  }
  .subtop {
  color: white;
  }
  .parallax-banner__wraper--{{ section.id }} {
    {% if text_color != 'transparent' %}
      --g-font-color-subtop: {{ text_color }};
      --g-color-heading :  {{ text_color }};
      --color-body-text : {{ text_color }};
      --color-body-text-rgb: {{ text_color.red }}, {{ text_color.green }},  {{ text_color.blue }} ;
    {% endif %}
  }
  </style>
<div class="customstyle{{ section.id }} " data-aos="{{ section.settings.animation }}">
  {%- render 'style-section' -%}
<div class="{{ section.settings.setwidth }}">
<div class="section-block"  >
  <section class="d-flex {{ positiontxt }} parallax-{{ section.id }} parallax-container lazyload parallax-banner__wraper  parallax-banner__wraper--{{section.id}} {% if section.settings.image != blank %}parallax-banner__wraper--has-background{% endif %}" 
         data-section-id="{{ section.id }}" data-section-type="parallax-image" 
        {% if section.settings.parrallax_enable %}
        data-bgset="{% render 'bgset', image: section.settings.image %}"
        data-sizes="auto"
        data-parent-fit="cover" {% endif %} >
       {% if section.settings.parrallax_enable == false %}
       <parallax-image class="simpleParallax" id="simpleParallax-{{ section.id }}" section-id="simpleParallax-{{ section.id }}" data-aos="{{ section.settings.animation }}">
       <img  class="thumbnail{{ section.id }} lazyload" src="{{ section.settings.image | image_url: width: 1920 }}" alt="{{ section.settings.title }}" 
        loading="lazy"
        width="{{ section.settings.image.width }}"
        height="{{ section.settings.image.height }}" />
        </parallax-image>
      {% endif %} 
       <div class="container">
        <div class="parallax-banner__meta text-{{ section.settings.align }}">
          {% for block in section.blocks %}
            {%- case block.type -%}
              {%- when 'spacer' -%}
                <div class="hero-image__space" style="--hero-spacer: {{ block.settings.hero-spacer }}px;"></div>
              {%- when 'sub_title' -%}
                  {%- if block.settings.subtitle != blank -%}
                    <div class="subtop mb-3">{{ block.settings.subtitle }}</div>
                  {%- endif -%}
                {%- when 'heading' -%}
                  {%- if block.settings.title -%}
                    <h2 class="mb-3 {{ block.settings.size_text }}">{{ block.settings.title }}</h2>
                  {%- endif -%}
                {%- when 'paragraph' -%}
                  {%- if block.settings.subtext != blank -%}
                    <div class="m-0 parallax-banner__sub rte mb-3 txt-body">
                      {{ block.settings.subtext }}
                    </div>
                  {%- endif -%}
                {%- when 'image' -%}
                  <div class="d-flex {% if section.settings.align == 'center' %} justify-content-center {%  elsif  section.settings.align == 'right' %} justify-content-end {% endif %}">
                  {%- if block.settings.image != blank -%}
                    <div class="image-content__image-container overflow-hidden hero-img__wrap" style="--img-in-hero:{{ block.settings.img-in-hero }}px">
                      <a href="{{ block.settings.image_link }}" class="image-content__image-wrapper" 
                          style="padding-top:{{ 1 | divided_by: block.settings.image.aspect_ratio | times: 100 }}%;">
                        {% assign img_url = block.settings.image | image_url: width: 1 | replace: 'width=1', 'width={width}' %}
                        <img class="image-content__image lazyload scale-in"
                          src="{{ block.settings.image | image_url: width: 1, height: 1 }}"
                          data-src="{{ img_url }}"
                          data-widths="[180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1944, 2048]"
                          data-aspectratio="{{ block.settings.image.aspect_ratio }}"
                          data-sizes="auto"
                          alt="{{ block.settings.image.alt | escape }}"
                          loading="lazy"
                          width="{{ block.settings.image.width }}"
                          height="{{ block.settings.image.height }}">
                        </a >
                    </div>
                  {%- else -%}
                    <div class="image-content__image hero-img__wrap" style="--img-in-hero:{{ block.settings.img-in-hero }}px">
                      {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
                    </div>
                  {%- endif -%}
                </div>
            {%- endcase -%}
          {% endfor %}
        
          <div class="parallax-banner__btn {% if section.settings.align == 'center' %} justify-content-center {%  elsif  section.settings.align == 'right' %} justify-content-end {% endif %} align-items-center">
          {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when 'button' -%}
                  {%- if block.settings.button != blank and block.settings.link != blank -%}
                    <div class="mt-3">
                      <a href="{{ block.settings.link }}" class="btn {{ block.settings.style_btn }}">
                        {{ block.settings.button | escape }}
                      </a>
                    </div>
                  {%- endif -%}  
              {%- endcase -%}
          {%- endfor -%}
          </div>
        </div>
      </div>
  </section>
</div>
</div>
</div>
<script>
  class ParallaxImage extends HTMLElement {
    constructor() {
      super();
      
    }
  connectedCallback() {
    const sectionId = this.getAttribute('section-id');
    const image = this.querySelector('img');
    const aosAnimation = this.getAttribute('data-aos');

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          window.addEventListener('scroll', this.parallaxEffect);
        } else {
          window.removeEventListener('scroll', this.parallaxEffect);
        }
      });
    });

    const section = document.getElementById(sectionId);
    observer.observe(section);

    const imageContainer = this;
    imageContainer.style.transform = 'translateY(0)';

    this.parallaxEffect = () => {
      const scrollPosition = window.pageYOffset;
      const maxScroll = document.documentElement.scrollHeight - window.innerHeight;
      const parallaxValue = (scrollPosition / maxScroll) * 50;
      image.style.transform = `translateY(-${parallaxValue}%) scale(1.2)`;
    };

  }
}

customElements.define('parallax-image', ParallaxImage);


</script>
{% schema %}
{
  "name": "Parallax banner",
  "class": "index-section",
  "settings": [
    {
      "type": "select",
      "id": "animation",
      "options": [
        {
          "value": "",
          "label": "None"
        },
        {
          "value": "fade",
          "label": "Fade"
        },
        {
          "value": "fade-up",
          "label": "Fade Up"
        },
        {
          "value": "fade-down",
          "label": "Fade Down"
        },
        {
          "value": "fade-left",
          "label": "Fade Left"
        },
        {
          "value": "fade-right",
          "label": "Fade Right"
        },
        {
          "value": "fade-up-right",
          "label": "Fade Up Right"
        },
        {
          "value": "fade-up-left",
          "label": "Fade Up Left"
        },
        {
          "value": "fade-down-right",
          "label": "Fade Down Right"
        },
        {
          "value": "fade-down-left",
          "label": "Fade Down Left"
        },
        {
          "value": "flip-up",
          "label": "Flip Up"
        },
        {
          "value": "flip-down",
          "label": "Flip Down"
        },
        {
          "value": "flip-left",
          "label": "Flip Left"
        },
        {
          "value": "flip-right",
          "label": "Flip Right"
        },
        {
          "value": "slide-up",
          "label": "Slide Up"
        },
        {
          "value": "slide-down",
          "label": "Slide Down"
        },
        {
          "value": "slide-left",
          "label": "Slide Left"
        },
        {
          "value": "slide-right",
          "label": "Slide Right"
        },
        {
          "value": "zoom-in",
          "label": "Zoom In"
        },
        {
          "value": "zoom-in-up",
          "label": "Zoom In Up"
        },
        {
          "value": "zoom-in-down",
          "label": "Zoom In Down"
        },
        {
          "value": "zoom-in-left",
          "label": "Zoom In Left"
        },
        {
          "value": "zoom-in-right",
          "label": "Zoom In Right"
        },
        {
          "value": "zoom-out",
          "label": "Zoom Out"
        },
        {
          "value": "zoom-out-up",
          "label": "Zoom Out Up"
        },
        {
          "value": "zoom-out-down",
          "label": "Zoom Out Down"
        },
        {
          "value": "zoom-out-left",
          "label": "Zoom Out Feft"
        },
        {
          "value": "zoom-out-right",
          "label": "Zoom Out Right"
        }
      ],
      "label": "Select Animation"
    },
    {
      "type": "select",
      "id": "setwidth",
      "label": "Full Width",
      "default": "container",
      "options": [
        {
          "value": "container",
          "label": "Box"
        },
        {
          "value": "container-fluid",
          "label": "Container Fluid"
        },
        {
          "value": "full",
          "label": "Full"
        }
      ]
    },
    {
      "type": "color",
      "id": "bgsection",
      "label": "Background Section",
      "default": "#ffffff"
    },
    {
      "type": "checkbox",
      "id": "parrallax_enable",
      "label": "Disable Parrallax ",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Background image"
    },
    
    {
      "type": "select",
      "id": "height_section",
      "label": "Height Section",
      "default": "550",
      "options": [
        {
          "label": "450px",
          "value": "450"
        },
        {
          "label": "550px",
          "value": "550"
        },
        {
          "label": "650px",
          "value": "650"
        },
        {
          "label": "750px",
          "value": "750"
        },
        {
          "label": "Full Screen",
          "value": "full-screen"
        }
      ]
    },
    {
      "type": "select",
      "id": "height_section_mobile",
      "label": "Height Section Mobile",
      "default": "450",
      "options": [
        {
          "label": "350px",
          "value": "350"
        },
        {
          "label": "450px",
          "value": "450"
        },
        {
          "label": "550px",
          "value": "550"
        },
        {
          "label": "650px",
          "value": "650"
        },
        {
          "label": "Full Screen",
          "value": "full-screen"
        }
      ]
    },
    {
      "type": "select",
      "id": "align",
      "label": "Text align",
      "default": "center",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Center",
          "value": "center"
        },
        {
          "label": "Right",
          "value": "right"
        }
      ]
    },
    {
      "type": "select",
      "id": "position_text",
      "options": [
        {
          "value": "top-left",
          "label": "Top Left"
        },
        {
          "value": "top-center",
          "label": "Top Center"
        },
        {
          "value": "top-right",
          "label": "Top Right"
        },
        {
          "value": "mid-left",
          "label": "Midle Left "
        },
        {
          "value": "mid-center",
          "label": "Midle Center "
        },
        {
          "value": "mid-right",
          "label": "Midle Right "
        },
        {
          "value": "bot-left",
          "label": "Bottom Left "
        },
        {
          "value": "bot-center",
          "label": "Bottom Center "
        },
        {
          "value": "bot-right",
          "label": "Bottom Right "
        }
      ],
      "default": "mid-center",
      "label": "Text Position"
    },
    {
      "type": "header",
      "content": "Color Content"
    },
    {
      "type": "color",
      "id": "bg_box",
      "label": "Background Boxed",
      "default": "#fff"
    },
    {
      "type": "range",
      "id": "opacity_bgbox",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "label": "Opacity Background Boxed",
      "default": 1
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Text Color",
      "default": "transparent"
    },
    {
      "type": "color",
      "id": "bg_overlay",
      "label": "Background Overlay",
      "default": "#000"
    },
    {
      "id": "gradient_bg",
      "type": "color_background",
      "label": "Background Overlay Gradient"
    },
    {
      "type": "range",
      "id": "opacity_bg_overlay",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "label": "Opacity Overlay",
      "default": 0.1
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "text",
      "id": "paddingsection",
      "label": "Padding Section",
      "default": "0px 0px 0px 0px",
      "info": "Padding: Top Right Bottom Left"
    },
    {
      "type": "text",
      "id": "marginsection",
      "label": "Margin Section",
      "default": "0px 0px 0px 0px",
      "info": "Margin: Top Right Bottom Left"
    }
  ],
  "blocks": [
    {
      "type": "sub_title",
      "name": "Sub Title",
      "settings": [
        {
          "type": "text",
          "id": "subtitle",
          "label": "Sub Title",
          "default": "Sub Title"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Heading"
        },
        {
          "type": "select",
          "id": "size_text",
          "default": "h2",
          "options": [
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            },
            {
              "value": "h4",
              "label": "H4"
            },
            {
              "value": "h5",
              "label": "H5"
            },
            {
              "value": "h6",
              "label": "H6"
            }
          ],
          "label": "Heading Size"
        }
      ]
    },
    {
      "type": "paragraph",
      "name": "Html / Description",
      "settings": [
        {
          "type": "textarea",
          "id": "subtext",
          "label": "Html / Description",
          "default": "Protection from the"
        }
      ]
    },
    {
      "type": "spacer",
      "name": "Spacer",
      "settings": [
        {
          "type": "range",
          "id": "hero-spacer",
          "min": 0,
          "max": 100,
          "step": 2,
          "label": "Padding",
          "default": 8
        }
      ]
    },
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "range",
          "id": "img-in-hero",
          "min": 0,
          "max": 300,
          "step": 4,
          "label": "Width Image",
          "default": 200
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "url",
          "id": "image_link",
          "label": "Image link to"
        }
      ]
    },
    {
      "type": "button",
      "name": "Button",
      "settings": [
        {
          "type": "text",
          "id": "button",
          "label": "Button text",
          "default": "discover now"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Button Link"
        },
        {
          "type": "select",
          "id": "style_btn",
          "label": "Style Button",
          "default": "btn-underline btn-underline-white",
          "options": [
            {
              "value": "btn-theme",
              "label": "Button Box"
            },
            {
              "value": "btn-theme btn-white",
              "label": "Button Box White"
            },
            {
              "value": "btn-underline",
              "label": "Button Line"
            },
            {
              "value": "btn-underline btn-underline-white",
              "label": "Button Line White"
            },
            {
              "value": "btn-outline",
              "label": "Button Outline"
            },
            {
              "value": "btn-outline btn-outline-white",
              "label": "Button Outline White"
            }
          ]
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Parallax banner",
      "category": "Image",
      "blocks": [
        {
          "type": "sub_title"
        },
        {
          "type": "heading"
        },
        {
          "type": "paragraph"
        }
      ]
    }
  ]
}
{% endschema %}